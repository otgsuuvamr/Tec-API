Corre√ß√µes:

- req.userId inexistente

No requireAuth.js voc√™ armazena req.user = decoded, mas no controller usa req.userId. Isso quebra em updateUser, changePassword e deleteUser.

Corre√ß√£o: usar req.user.id (ou alterar o middleware para definir req.userId = decoded.id). 	--OK


- login com validateUser

O middleware de valida√ß√£o de usu√°rio exige confPass mesmo no login. Isso impede login normal.

Corre√ß√£o: criar um schema de valida√ß√£o separado para login (loginSchema). 	--OK


- getUser no userControllers

Retorna { user } mas no profile.html espera que os dados venham no root (data.name).

Corre√ß√£o: retornar direto { name: user.name, email: user.email } ou ajustar o front.


- register

Est√° hashando duas vezes (password e confPass), mas s√≥ salva password. O hash do confPass √© in√∫til.

Corre√ß√£o: apenas valide se password === confPass (isso j√° est√° no Joi) e salve um √∫nico hash.


- Valida√ß√µes de update

updateUser n√£o valida nome, pode salvar vazio.

changePassword n√£o exige senha atual.

updateEmail e deleteAcc.html est√£o vazios e sem backend para token de confirma√ß√£o.


- Melhorias Imediatas
Separar schemas de valida√ß√£o para registro, login e update. --OK

Criar rota e l√≥gica para alterar e-mail com envio de token. 

Criar rota para alterar senha com confirma√ß√£o da senha atual.

Finalizar p√°ginas updateEmail.html, updatePass.html, deleteAcc.html com JS para consumir API.

Criar valida√ß√£o parcial no update (n√£o obrigar todos campos).

Padronizar retorno do backend (sempre { message, data }).


- Melhorias Futuras
Criar tratamento global de erros.

Criar logs para auditoria de altera√ß√µes/exclus√µes de usu√°rio.

Implementar pagina√ß√£o em listagem de usu√°rios/produtos.

Adicionar Rate Limit para login/registro.

Melhorar seguran√ßa: expira√ß√£o curta do token e refresh token.


- Falta fazer para estar 100%
Consertar bugs acima (especialmente req.userId e valida√ß√µes).

Implementar altera√ß√£o de email com token via e-mail.

Implementar altera√ß√£o de senha com senha atual e confirma√ß√£o.

Implementar exclus√£o de conta com confirma√ß√£o visual e senha.

Finalizar p√°ginas de front para cada a√ß√£o.

Revisar depend√™ncias (token.js pode ser removido).


- 3. Busca de usu√°rios
Na rota /users, hoje qualquer usu√°rio autenticado pode buscar todos os outros.
Se n√£o houver controle, isso vira risco de privacidade.
üí° Sugest√£o:

Implementar pagina√ß√£o e filtros.

Permitir busca por nome ou e-mail, mas n√£o retornar senhas ou dados sens√≠veis.


- 
- 
- 
- 